import type { IconSVGNode } from '../common/types';
export declare const propNamesRemap: {
    class: string;
    className: string;
    'xlink:href': string;
    strokeWidth: string;
    'stroke-width': string;
    strokeOpacity: string;
    'stroke-opacity': string;
    strokeLinecap: string;
    'stroke-linecap': string;
    strokeLinejoin: string;
    'stroke-linejoin': string;
    strokeDasharray: string;
    'stroke-dasharray': string;
    strokeDashoffset: string;
    'stroke-dashoffset': string;
    strokeMiterlimit: string;
    'stroke-miterlimit': string;
    'transform-origin': string;
    style: null;
};
export declare const convertRunner: (attrs: Record<string, any>, originalContent?: any, { allowNonWhitelistProp }?: {
    allowNonWhitelistProp?: boolean | undefined;
}) => any;
export declare const filterNode: (node: IconSVGNode) => boolean;
/**
 * Travel children node
 */
export declare const renderChildren: (nodes: any[], parentKey?: string, namespace?: string) => import("react").DetailedReactHTMLElement<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>[];
