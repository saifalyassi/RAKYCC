import type { IconCoreProps, IconSVG } from './types';
export declare const PRIMARY_CURRENT_COLOR = "currentColor";
export declare const createRandomId: (base?: number) => string;
export declare const filterNonNumberStartedString: (str: any) => boolean;
export declare const filterNubmerOnlyString: (str: any) => boolean;
export declare const filterNonNubmerOnlyString: (str: any) => boolean;
export declare const filterIgnoredPropNames: (name: any) => boolean;
export declare const filterNonEmptyString: (name: any) => boolean;
export declare const DEFAULT_VARIANT = "regular";
export declare const removeUnit: (str?: string | number, unit?: string) => string;
export declare const appendUnit: (str?: string | number, unit?: string) => string;
export declare const propNameFiltering: (name: string) => boolean;
/**
 * Used for create the runner for converting react used props
 * @param namesRemap {Record<string, string | null>} Swap the original name into new props name or remove it when mattched
 * @param attrs
 * @param originalContent
 * @returns
 */
export declare const createConvertReactProps: (namesRemap: Record<string, string | null>, { convertCamelCase }?: {
    convertCamelCase?: boolean | undefined;
}) => (attrs: Record<string, any>, originalContent?: any, { allowNonWhitelistProp }?: {
    allowNonWhitelistProp?: boolean | undefined;
}) => any;
/**
 * Getting viewBox string from properties, default width height is 24
 * @param {IconSVG} content SVG Content
 * @returns {string}
 */
export declare const getViewboxValue: (content: IconSVG) => string;
export declare const getContentFromIconProps: <IconNames extends string, IconVariant extends string>(props: IconCoreProps<IconNames, IconVariant>) => IconSVG | null;
export declare const resolveIconsMap: <IconNames extends string, IconVariant extends string = string>(props: IconCoreProps<IconNames, IconVariant>) => import("./types").IconsMapType<IconNames> | null;
export declare function showDebugWarning(...rest: any[]): void;
